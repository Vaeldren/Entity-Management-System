@page "/employees"

@attribute [Authorize]
@inject HttpClient Http

<h3>Employees Table</h3>

<div class="table-responsive">
    <table class="table table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Employee Name</th>
                <th>Company</th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Employees)
            {
            <tr>
                <td>@employee.Username</td>
                <td>
                    @foreach (var comp in Companies)
                    {
                        if (@comp.CompanyId == @employee.CompanyId)
                        {
                            @comp.CompanyName
                        }
                    }
                </td>
                <td><a class="btn btn-outline-secondary" href="/employees/edit/@employee.EmployeeId">Edit</a></td>
                <td><a class="btn btn-outline-danger" href="/employees/delete/@employee.EmployeeId">Delete</a></td>
            </tr>
            }
        </tbody>
    </table>
</div>
<p>
    <a class="btn btn-primary" href="/employees/create">Create</a>
</p>

@code {
    private List<Employee> Employees = new List<Employee>();
    private List<Company> Companies = new List<Company>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Employees = await Http.GetFromJsonAsync<List<Employee>>("/api/Employees");
            Companies = await Http.GetFromJsonAsync<List<Company>>("/api/Companies");

        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        catch (Exception e)
        {

        }

    }
}

