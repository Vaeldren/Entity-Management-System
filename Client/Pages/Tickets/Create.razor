@page "/tickets/create"

@attribute [Authorize]
@inject HttpClient Http 
@inject NavigationManager Navigation

<h3>Ticket Create</h3>

<EditForm Model="Ticket" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label class="control-label">Description</label>
        <InputText @bind-Value="Ticket.Description" class="form-control" />
        <ValidationMessage For="@(() => Ticket.Description)" />
    </div>

    <div class="form-group">
        <label class="control-label" for="user">Assigned User</label>
        <select id="user" @bind="Ticket.UserId" class="form-control">
            <option value=""></option>
            @foreach (var emp in employees)
            {
                <option value="@emp.EmployeeId">@emp.Username</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label class="control-label">Starting Date</label>
        <InputDate @bind-Value="Ticket.StartDate" class="form-control"/>
        <ValidationMessage For="@(() => Ticket.StartDate)" />
    </div>

    <button type="submit" class="btn btn-primary">
        <i class="fas fa-save"></i> Create
    </button>
</EditForm>


@code {
    private Ticket Ticket { get; set; } = new Ticket();
    public Employee Employee { get; set;}
    public List<Employee> employees = new List<Employee>();

    protected override async Task OnInitializedAsync()
    {
        employees = await Http.GetFromJsonAsync<List<Employee>>("/api/Employees");
    }

    private async void HandleValidSubmit()
    {
        try {
            Ticket.Status = "Open";
            var response = await Http.PostAsJsonAsync("/api/Tickets", Ticket);
            response.EnsureSuccessStatusCode();

            var content = await response.Content.ReadAsStringAsync();
            var ticket = JsonConvert.DeserializeObject<Ticket>(content);
            Navigation.NavigateTo("/tickets");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();

        } catch (Exception e)
        {

        }
    }
}
